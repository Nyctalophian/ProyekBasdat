/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.proyekakhirbasdat;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Isuraa
 */
public class TabelTransaksi extends javax.swing.JFrame {

    /**
     * Creates new form TabelTransaksi
     */
    public TabelTransaksi() {
        initComponents();
        showAllData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    DefaultTableModel tableModel = new DefaultTableModel(
    new Object [][] {

    },
    new String [] {
        "ID Transaksi", "Tanggal Transaksi", "ID Sepeda", "Harga Jual", "Untung"
    }
    );
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        tfIDTransaksi = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfTanggalTransaksi = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfIDSepeda = new javax.swing.JTextField();
        btnShowAll = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();
        btnRetrieve = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelTransaksi = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        tfHargaJual = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("ID Transaksi");

        tfIDTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfIDTransaksiActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Tanggal Transaksi");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("ID Sepeda");

        btnShowAll.setText("SHOW ALL");
        btnShowAll.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                btnShowAllCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        btnCreate.setText("CREATE");
        btnCreate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                btnCreateCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        btnRetrieve.setText("RETRIEVE");
        btnRetrieve.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                btnRetrieveCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        btnRetrieve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrieveActionPerformed(evt);
            }
        });

        btnDelete.setText("DELETE");
        btnDelete.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                btnDeleteCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("UPDATE");
        btnUpdate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                btnUpdateCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tabelTransaksi.setModel(tableModel);
        tabelTransaksi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = tabelTransaksi.getSelectedRow();

                if (row != -1) {
                    String idTransaksi = tabelTransaksi.getValueAt(row, 0).toString(); // Kolom ke-0
                    String tglTransaksi = tabelTransaksi.getValueAt(row, 1).toString(); // Kolom ke-1
                    String idSepeda = tabelTransaksi.getValueAt(row, 2).toString(); // Kolom ke-1
                    String hargaJual = tabelTransaksi.getValueAt(row, 3).toString(); // Kolom ke-1
                    //            String untung = tabelTransaksi.getValueAt(row, 4).toString(); // Kolom ke-1

                    tfIDTransaksi.setEnabled(false);
                    tfIDTransaksi.setText(idTransaksi);
                    tfTanggalTransaksi.setText(tglTransaksi);
                    tfIDSepeda.setText(idSepeda);
                    tfHargaJual.setText(hargaJual);
                    //            tfUntung.setText(untung);
                }
            }
        });
        tabelTransaksi.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tabelTransaksi);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Harga Jual");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRetrieve, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(tfIDTransaksi)
                    .addComponent(tfTanggalTransaksi)
                    .addComponent(jLabel4)
                    .addComponent(btnShowAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(tfIDSepeda, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfHargaJual))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 463, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfIDTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTanggalTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfIDSepeda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfHargaJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(btnShowAll)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCreate)
                            .addComponent(btnRetrieve))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDelete)
                            .addComponent(btnUpdate))))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowAllCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_btnShowAllCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_btnShowAllCaretPositionChanged

    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        tableModel.setRowCount(0);
        showAllData();
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void btnCreateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_btnCreateCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateCaretPositionChanged

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
                tableModel.setRowCount(0);
                String idtrans = tfIDTransaksi.getText();
                String tgl = tfTanggalTransaksi.getText();
                String idSepeda = tfIDSepeda.getText();
                String hargaJual = tfHargaJual.getText();
        
                try {
                        Connection connection = ConnectionDB.getConnection();
                        statementInsert(connection, idtrans, tgl, idSepeda, hargaJual);
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(rootPane, "Gagal menambahkan data : "+ e.getMessage());
                   
                       e.printStackTrace();
                    }
        
                tfIDTransaksi.setText("");
                tfTanggalTransaksi.setText("");
                tfIDSepeda.setText("");
                tfHargaJual.setText("");
                showAllData();
    }//GEN-LAST:event_btnCreateActionPerformed

    private void btnRetrieveCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_btnRetrieveCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRetrieveCaretPositionChanged

    private void btnRetrieveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrieveActionPerformed
        tableModel.setRowCount(0);

        if (!(tfIDTransaksi.getText().isBlank() && tfTanggalTransaksi.getText().isBlank() && tfIDSepeda.getText().isBlank() && tfHargaJual.getText().isBlank())) {
            try {
                Connection conn = ConnectionDB.getConnection();
                showSomeData(
                    statementQueryCondition(
                        conn,
                        tfIDTransaksi.getText(),
                        tfTanggalTransaksi.getText(),
                        tfIDSepeda.getText(),
                        Integer.parseInt(tfHargaJual.getText())
                    )
                );
            } catch (SQLException ex) {
                Logger.getLogger(TabelTransaksi.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(TabelTransaksi.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnRetrieveActionPerformed

    private void btnDeleteCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_btnDeleteCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteCaretPositionChanged

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selected = tabelTransaksi.getSelectedRow();
        Connection conn = null;
        String idtran;
        if (selected !=-1)
        idtran = tabelTransaksi.getValueAt(selected, 0).toString();
        else
        idtran= tfIDTransaksi.getText();
        try {
            conn = ConnectionDB.getConnection();
            statementDelete(conn, idtran);

            tableModel.setRowCount(0);
            showAllData();

            tfIDSepeda.setText("");
            tfIDTransaksi.setText("");
            tfHargaJual.setText("");
            tfTanggalTransaksi.setText("");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, "SQL");
        } catch (ClassNotFoundException e) {
            JOptionPane.showMessageDialog(rootPane, "CLASS NOT FOUND");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_btnUpdateCaretPositionChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateCaretPositionChanged

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
            try {
            Connection conn = ConnectionDB.getConnection();
            statementUpdate(conn);

            tableModel.setRowCount(0);
            showAllData();

            tfIDSepeda.setText("");
            tfHargaJual.setText("");
            tfIDTransaksi.setText("");
            tfTanggalTransaksi.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal melakukan UPDATE terhadap database");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    public void statementUpdate(Connection conn) throws SQLException {
        int selected = tabelTransaksi.getSelectedRow();

        String idSepedaTerpilih = tabelTransaksi.getValueAt(selected, 0).toString(); // kolom idSEPEDA
        String idSepedaBaru = tfIDSepeda.getText();
        int hargajualbaru = Integer.parseInt(tfHargaJual.getText());

        String format = "UPDATE Transaksi SET Sepeda_ID = '" + idSepedaBaru +  "', Jual = " + hargajualbaru + " WHERE Trans_id = '" + idSepedaTerpilih + "'";
        Statement st = conn.createStatement();
        st.executeUpdate(format);
    }


    private void tfIDTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfIDTransaksiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfIDTransaksiActionPerformed

    // CREATE
    public void statementInsert(Connection conn, String idTransaksi, String tgl, String idSepeda, String hargaJual) throws SQLException {
        // ambil harga beli
        ResultSet ambilHarga = ambilHargaSepeda(conn, idSepeda);
        String hargaBeli = "";
        while (ambilHarga.next()){
            hargaBeli = ambilHarga.getString("Harga_Beli");
        }
        
        // cari untung
        int untung = Integer.parseInt(hargaJual) - Integer.parseInt(hargaBeli);
        
//        String format = ("insert into Transaksi(Trans_ID,Tgl,Sepeda_ID,Jual,Untung) values ('" + idTransaksi + "','" + tgl + "','" + idSepeda +"','" + hargaJual + "','" + untung + "')");
//        Statement st = conn.createStatement();
//        st.executeUpdate(format);
    String sql= "insert into Transaksi values ((select max(Trans_ID)+1 from Transaksi ) ,getdate(),?,?,?)";
    PreparedStatement ps = conn.prepareStatement(sql);
    ps.setString(1, idSepeda);
    ps.setInt(2,Integer.parseInt(hargaJual));
    ps.setInt(3,untung);
    ps.executeUpdate();
    }
    
    // RETRIEVE ALL
    public ResultSet statementQueryAll(Connection conn) throws SQLException {
        Statement st = conn.createStatement();
        ResultSet rs = st.executeQuery(
            "SELECT * FROM Transaksi"
        );
        
        return rs;
    }
    
    // RETRIEVE HARGA
    public ResultSet ambilHargaSepeda(Connection conn, String idSepeda) throws SQLException {
        String sql = "select Harga_Beli from Sepeda where Sepeda_ID = ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setString(1, idSepeda);
        
        ResultSet rs = ps.executeQuery();
        return rs;
    }
    
    // RETRIEVE TRANSAKSI
    public ResultSet statementQueryCondition(Connection conn,String T_id,String Tgl, String S_id, int jual) throws SQLException {
        String sql = "select * from Transaksi where Trans_ID like ? or Tgl like ? or Sepeda_ID like ? or Jual like ?";
        PreparedStatement ps = conn.prepareStatement(sql);
        ps.setString(1, "%"+T_id+"%");
        ps.setString(2, "%"+Tgl+"%");
        ps.setString(3, "%"+S_id+"%");
        ps.setString(4, "%"+jual+"%");

        ResultSet rs = ps.executeQuery();
        
        return rs;
    }
    
    // SHOW ALL DATA
    public void showAllData() {
        try {
            Connection conn = ConnectionDB.getConnection();

            tfIDTransaksi.setEnabled(true);
            
            tfIDTransaksi.setText("");
            tfTanggalTransaksi.setText("");
            tfIDSepeda.setText("");
            tfHargaJual.setText("");
            
            ResultSet hasil = statementQueryAll(conn);
            while (hasil.next()) {
                String id = hasil.getString("Trans_ID");
                String tgl = hasil.getString("Tgl");
                String sepeda_id = hasil.getString("Sepeda_ID");
                String jual = hasil.getString("Jual");
                String untung = hasil.getString("Untung");
                
                tableModel.addRow(new Object[]{id, tgl, sepeda_id, jual, untung});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal menampilkan data : "+ e.getMessage());
        }
    }

    public void statementDelete(Connection conn, String idSepeda)throws SQLException{
        try {
            Statement st = conn.createStatement();
            if (idSepeda == null) {
                idSepeda = "";
            }
            st.executeUpdate("delete from Transaksi where Trans_ID = " + idSepeda);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal untuk menghapus data: "+ e.getMessage());
        }
    }

    public void showSomeData(ResultSet hasil) {
        try {
            while (hasil.next()) {
                String id = hasil.getString("Trans_ID");
                String tgl = hasil.getString("Tgl");
                String sepeda_id = hasil.getString("Sepeda_ID");
                String jual = hasil.getString("Jual");
                String untung = hasil.getString("Untung");
                tableModel.addRow(new Object[]{id, tgl, sepeda_id, jual, untung});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Gagal menampilkan data : " + e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabelTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabelTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabelTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabelTransaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TabelTransaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnRetrieve;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelTransaksi;
    private javax.swing.JTextField tfHargaJual;
    private javax.swing.JTextField tfIDSepeda;
    private javax.swing.JTextField tfIDTransaksi;
    private javax.swing.JTextField tfTanggalTransaksi;
    // End of variables declaration//GEN-END:variables
}
